$${
//This checks if you are looking at a block or entity;
if(HIT == "TILE");
	echo("/blockdata %HITX% %HITY% %HITZ% {}");
	set(hit);
elseif(HIT == "ENTITY");
	
	//This basically adds @e and [] with the arguments inside;
	prompt(&target,"$$[Choose or paste in[Automatic,@e,Custom]]","Target");
	if(&target == "");
		log("&6&lNo Target, Macro Stopped.");
		stop;
	elseif(&target == "Automatic");
		if(HITNAME == "MushroomCow");
			set(&name,"mooshroom");
		else;
			set(&name,"%HITNAME%");
		endif;
		trace(5,true);
		set(&targetoutput,"@e[type=%&name%,x=%TRACEX%,y=%TRACEY%,z=%TRACEZ%,r=1,c=1]");
	elseif(&target == "@e");
		unsafe(5000);
			set(&targetoutput,"%&target%[");
			//These 2 strings contain the arguments and the short description for each;
			set(&args,"x,y,z,dx,dy,dz,r,rm,score_name,score_name_min,tag,team,c,l,lm,m,name,rx,rxm,ry,rym,type");
			set(&info,"x:x coordinate,y:y coordinate,z:z coordinate,dx:delta/change in x,dy:delta/change in y,dz:delta/change in z,r:maximum radius,rm:minimum radius,score_name:maximum score,score_name_min:minimum score,tag:scoreboard tag,team:team name,c:count,l:maximum xp level,lm:minimum xp level,m:gamemode,name:entity name,rx:maximum vertical rotation,rxm:minimum vertical rotation,ry:maximum horizontal rotation,rym:minimum horizontal rotation,type:entity type");
			split(",","%&info%",&info[]);
			do;
				prompt(&argsresult,"$$[[%&args%]]","Arguments:");
				if(&argsresult == "");
					break;
				else;
					ifcontains("%&argsresult%","=");
						split("=","%&argsresult%",&r[]);
						set(&targetoutput,"%&targetoutput%,%&argsresult%");
						split(",","%&args%",&args[]);
						foreach(&args[],&item);
							ifbeginswith("%&item%","%&r[0]%");
								indexof(&args[],#r,"%&item%");
								unset(&args[%#r%]);
								unset(&info[%#r%]);
								join(",",&info[],&info);
								replace(&info,",,",",");
								regexreplace(&info,"^,");
								split(",","%&info%",&info[]);
								break;
							endif;
						next;
						join(",",&args[],&args);
						replace(&args,",,",",");
						regexreplace(&args,"^,");
					else;
						split(",","%&args%",&args[]);
						arraysize(&args[],#size);
						unset(#counter);
						do;
							if(&argsresult == &info[%#counter%]);
								split(":","%&argsresult%",&r[]);
								set(&args[%#counter%],"%&r[0]%");
								inc(#counter);
								break;
							elseif(&argsresult == &args[%#counter%]);
								set(&args[%#counter%],"%&info[%#counter%]%");
								inc(#counter);
								break;
							else;
								inc(#counter);
							endif;
						until(#counter == #size);
						join(",",&args[],&args);
					endif;
				endif;
			loop;
			replace(&targetoutput,"[,","[");
			set(&targetoutput,"%&targetoutput%]");
			replace(&targetoutput,"[]");
			replace(&targetoutput," ");
		endunsafe;
	elseif(&target == "Custom");
		prompt(&targetoutput,"$$?","Target Selector:");
	else;
		set(&targetoutput,"%&target%");
	endif;
	echo("/effect %&targetoutput% minecraft:glowing 10");
	do;
		popupmessage("&fPress &6&lShift &fto &aconfirm&f, &6&lControl &fto &ccancel");
		if(SHIFT);
			popupmessage("");
			break;
		elseif(CTRL);
			log("&6&lMacro Stopped.");
			popupmessage("");
			stop;
		endif;
	loop;
	echo("/entitydata %&targetoutput% {}");
	unset(hit);
else;
	stop();
endif;
wait(4t);
//This gets the chat message containing the block/entity data;
set(&string,"%@&oldchat%");
//&string2 is a backup, used to check if the values was changed compared to &string;
set(&string2,"%&string%");
ifmatches("%&string%","(The target block is not a data holder block)|(cannot be found)|(found nothing)|(is a player and cannot be changed)");
	//Stops script if there is no data;
	stop();
endif;
ifcontains("%&string%","\"{\\\"extra\\\":[");
	prompt(&warn,"$$[Continue[No,Yes]]","&4&lColored signs doesn't work well...proceed with caution.");
	if(&warn != "Yes");
		log("&6&lMacro Stopped.");
		stop;
	endif;
endif;
ifbeginswith("%&string%","The data tag did not change: {");
	unsafe(10000);
		//Replacing some stuff to make sure the data is not going to mess up the prompt;
		//This macro will use prompt for arrays, and it will be sensitive to these: " [ ] ,;
		//Therefore I replaced the brackets with［ ］and commas with ，;
		//Escaping the " is also very important;
		strip(&string,"%&string%");
		replace(&string,"The data tag did not change: {");
		regexreplace(&string,"}$");
		replace(&string,"[","［");
		replace(&string,"]","］");
		replace(&string,"\\","\\\\");
		unset(&objects[]);
		//&object2[] is a backup, used to check if the values was changed compared to &objects[];
		unset(&objects2[]);
		unset(&output[]);
		//In certain blockdatas eg chest, there are things like Items:[{Slot:0,id:"minecraft:dirt",Count:1, Damage:1},{Slot1},{Slot2 and so on}];
		//To make it easier to edit them, I made a second layer of the gui;
		//If the script detects a something:[], it will send that data in the [] into the second layer;
		//In the first layer, only the "something:" prefix will remain;
		//Clicking into the "something:" will open the second layer;
		//I limited it to two array layers cause im lazy;
		do;
			unset(&objectvalue);
			unset(&objectvalue2);
			unset(&name);
			match("%&string%","([^,]*?:［.*?］)",&objectvalue);
			match("%&string%","([^,]*?:［[^［］]*?［[^［］]*?］[^［］]*?］)",&objectvalue2);
			if(&objectvalue == "");
				break;
			elseif(&objectvalue2 != "");
				match("%&objectvalue2%","([^,]*?:)",&name);
				replace(&string,"%&objectvalue2%","%&name%");
				replace(&objectvalue2,"%&name%［.*?］$");
				split("","%&objectvalue2%",&values[]);
				unset(open);
				unset(#charcount);
				arraysize(&values[],#charlength);
				do;
					if(&values[%#charcount%] == "［");
						set(open);
					elseif(&values[%#charcount%] == "］");
						unset(open);
					elseif(open);
						ifmatches("%&values[%#charcount%]%",",");
							set(&values[%#charcount%],"，");
						endif;
					endif;
					inc(#charcount);
				until(#charcount == #charlength);
				join("",&values[],&finalvalue);
				set(&objects[],"%&name%［%&finalvalue%］");
				set(&objects2[],"%&name%［%&finalvalue%］");
			else;
				match("%&objectvalue%","([^,]*?:)",&name);
				replace(&string,"%&objectvalue%","%&name%");
				set(&objects[],"%&objectvalue%");
				//objects2[] is a backup array;
				set(&objects2[],"%&objectvalue%");
			endif;
		loop;
		//There is a cancel option, which will immediately stop the script;
		set(&string,"%&string%,Cancel");
		//This part basically groups together Text2:"{"color":"gold","text":"Hi!"}";
		//Since by default, it will split by commas, which will result in 2 items;
		//Before: 			Text2:"{"color":"gold"			"text":"Hi!"}";
		//After:			Text2:"{"color":"gold"，"text":"Hi!"}";
		//Notice the ，is used to prevent it from splitting at every comma, when the prompt [[array]] is used;
		do;
			split(",","%&string%",&data[]);
			arraysize(&data[],#size);
			set(#count1,0);
			set(#count2,1);
			unset(&layer[]);
			do;
				ifcontains("%&data[%#count1%]%","{");
					ifcontains("%&data[%#count1%]%","}");
					else;
						set(#low,#count1);
						set(&layer[],"%&data[%#count1%]%");
						do;
							set(&layer[],"%&data[%#count2%]%");
							ifcontains("%&data[%#count2%]%","}");
								set(#high,#count2);
								break;
							endif;
							inc(#count1);
							inc(#count2);
						loop;
						join("，",&layer[],&joinedstr);
						replace(&joinedstr,"\\","\\\\");
						replace(&joinedstr,"\\\\\\","\\\\");
						set(&data[%#low%],"%&joinedstr%");
						do;
							inc(#low);
							unset(&data[%#low%]);
						until(#low == #high);
						unset(&layer[]);
					endif;
				endif;
				inc(#count1);
				inc(#count2);
			until(#count1 == #size);
			join(",",&data[],&string);
			//Since unset removes the value of the index, not popping it off, the value will be "" and causes ,,;
			unset(&past);
			do;
				set(&past,"%&string%");
				replace(&string,",,",",");
			until(&past == &string);
			//Now it will prompt for &result;
			prompt(&result,"$$[Data[%&string%]]","Blockdata: ");
			if(&result == "");
				break;
			elseif(&result == "Cancel");
				log("&6&lCancelled, Macro Stopped");
				stop();
			endif;
			ifmatches("%&result%",".*?:$");
				//This ifmatches checks if the result contains the [] with a deeper layer of data;
				do;
					foreach(&objects[],&object);
						match("%&object%","(.*?:)",&i);
						set(&item2,"%&object%");
						replace(&result,"\\","\\\\");
						if(&i == &result);
							replace(&result,"\\\\","\\");
							ifmatches("%&item2%","(.*?:［］)");
								split(":","%&i%",&i[]);
								prompt(&res,"$$[%&i[0]%]","Blockdata: ");
								if(&res != "");
									regexreplace(&res,"(^\(\d*?\))");
									if(&res != "");
										set(&item2,"%&result%［%&res%］");
									else;
										break;
									endif;
								else;
									set(&result2,"");
									break;
								endif;
							endif;
							replace(&item2,"%&i%［");
							regexreplace(&item2,"］$");
							
							regexreplace(&item2,"^,");
							split(",","%&item2%",&data2[]);
							unset(&item2);
							arraysize(&data2[],#size2);
							set(#count2,0);
							set(#count22,1);
							set(#new2,%#count2%);
							set(#new22,%#count22%);
							set(#c,0);
							unset(bracket);
							do;
								unset(&new2[]);
								ifcontains("%&data2[%#count2%]%","［");
									set(bracket);
								endif;
								ifcontains("%&data2[%#count2%]%","］");
									unset(bracket);
								endif;
								ifbeginswith("%&data2[%#count2%]%","{");
									ifendswith("%&data2[%#count2%]%","}");
										set(&data2[%#count2%],"(%#c%)%&data2[%#count2%]%");
										inc(#c);
									else;
										set(#new2,"%#count2%");
										set(&new2[],"(%#c%)%&data2[%#count2%]%");
										do;
											set(&new2[],"%&data2[%#count22%]%");
											ifcontains("%&data2[%#count22%]%","［");
												set(bracket);
											endif;
											ifcontains("%&data2[%#count22%]%","］");
												unset(bracket);
											endif;
											ifendswith("%&data2[%#count22%]%","}");
												if(!bracket);
													set(#new22,"%#count22%");
													break;
												endif;
											endif;
											inc(#count2);
											inc(#count22);
										loop;
										inc(#c);
										join("，",&new2[],&newstr2);
										set(&data2[%#new2%],"%&newstr2%");
										do;
											inc(#new2);
											unset(&data2[%#new2%]);
										until(#new2 == #new22);
										unset(&new2[]);
									endif;
								elseif(&data2[%#count2%] != "");
									set(&data2[%#count2%],"(%#c%)%&data2[%#count2%]%");
									inc(#c);
								endif;
								inc(#count2);
								inc(#count22);
							until(#count2 == #size2);
							join(",",&data2[],&item2);
							unset(&past);
							do;
								set(&past,"%&item2%");
								replace(&item2,",,",",");
							until(&past == &item2);
							//Replacing ,,;
							replace(&item2,"\\\\","\\");
							split(":","%&result%",&r[]);
							set(&prefix,"%&r[0]%");
							regexreplace(&prefix,"\W");
							prompt(&result2,"$$[%&prefix%[%&item2%,+]]","Blockdata: ");
							if((&result2 == "") || (&result2 == "+"));
								break;
							endif;
							ifmatches("%&result2%","(^\(\d*?\))",&result3);
								if(&result3 == "");
									set(&result3,"null");
								endif;
							else;
								split(",","%&item2%",&item2[]);
								set(&item2[],"%&result2%");
								foreach(&item2[],&item5);
									set(&tempstr2,"%&item5%");
									regexreplace(&tempstr2,"(^\(\d*?\))");
									indexof(&item2[],#index5,"%&item5%");
									set(&item2[%#index5%],"%&tempstr2%");
								next;
								join(",",&item2[],&result5);
								foreach(&objects[],&i3);
									ifbeginswith("%&i3%","%&result%");
										indexof(&objects[],#index3,"%&i3%");
										set(&objects[%#index3%],"%&result%［%&result5%］");
										break;
									endif;
								next;
								break;
							endif;
							set(new);
							split(",","%&item2%",&item2[]);
							foreach(&item2[],&i2);
								indexof(&item2[],#index,"%&i2%");
								ifbeginswith("%&i2%","%&result3%");
									set(&tempstr,"%&result2%");
									regexreplace(&tempstr,"(^\(\d*?\))");
									unset(new);
									if(&tempstr != "");
										set(&item2[%#index%],"%&tempstr%");
									else;
										unset(&item2[%#index%]);
									endif;
								else;
									set(&tempstr,"%&i2%");
									regexreplace(&tempstr,"(^\(\d*?\))");
									if(&tempstr != "");
										set(&item2[%#index%],"%&tempstr%");
									else;
										set(&item2[],"%&tempstr%");
									endif;
								endif;
							next;
							if(new);
								regexreplace(&result2,"(^\(\d*?\))");
								set(&item2[],"%&result2%");
							endif;
							join(",",&item2[],&result4);
							replace(&result4,",,",",");
							foreach(&objects[],&i3);
								ifbeginswith("%&i3%","%&result%");
									indexof(&objects[],#index3,"%&i3%");
									set(&objects[%#index3%],"%&result%［%&result4%］");
									break;
								endif;
							next;
							break;
						endif;
					next;
					if(&result2 == "");
						break;
					endif;
				loop;
			else;
				split(":","%&result%",&array[]);
				unset(#counter);
				do;
					ifbeginswith("%&data[%#counter%]%","%&array[0]%");
						set(&data[%#counter%],"%&result%");
						unset(old);
						foreach(&output[],&out);
							ifbeginswith("%&out%","%&array[0]%");
								indexof(&output[],#out,"%&out%");
								ifcontains("%&string2%","%&result%");
									unset(&output[%#out%]);
								else;
									set(&output[%#out%],"%&result%");
								endif;
								set(old);
							endif;
						next;
						if(!old);
							set(&output[],"%&result%");
						endif;
						join(",",&data[],&string);
						replace(&string,"\\","\\\\");
						replace(&string,"\\\\\\","\\");
						break;
					endif;
					inc(#counter);
				until(#counter == #size);
			endif;
		loop;
		foreach(&objects[],&a);
			indexof(&objects,#in,"%&a%");
			if(&objects2[%#in%] != &a);
				set(&output[],"%&a%");
			endif;
		next;
		//Join everything into the final string;
		join(",",&output[],&string);
		do;
			set(&past,"%&string%");
			replace(&string,",,",",");
		until(&past == &string);
		regexreplace(&string,"^,");
		replace(&string,"［","[");
		replace(&string,"］","]");
		replace(&string,"，",",");
		replace(&string,"\\\\","\\");
		replace(&string,",Cancel");
		if(&string == "");
			log("&6&lNo Data Changed, Macro Stopped");
			stop();
		endif;
	endunsafe;
	//decides which command to run (blockdata or entitydata);
	//also checks if the command is too long to be executed in chat;
	//and if the player doesn't have a command block, /give @p minecraft:command_block;
	//if they have command block, slot is switched to it;
	if(hit);
		split("","/blockdata %HITX% %HITY% %HITZ% {%&string%}",&char[]);
		arraysize(&char[],#char);
		if(#char > 256);
			log("&4&lCommand is too long to run in chat, command copied to clipboard, please use command block instead");
			setclipboard("/blockdata %HITX% %HITY% %HITZ% {%&string%}");
			getslot("command_block",#slot);
			if(#slot == -1);
				echo("/give @p minecraft:command_block");
			else;
				slot(%#slot%);
			endif;
		else;
			echo("/blockdata %HITX% %HITY% %HITZ% {%&string%}");
		endif;
	else;
		split("","/entitydata %&targetoutput% {%&string%}",&char[]);
		arraysize(&char[],#char);
		if(#char > 256);
			log("&4&lCommand is too long to run in chat, command copied to clipboard, please use command block instead");
			setclipboard("/entitydata %&targetoutput% {%&string%}");
			getslot("command_block",#slot);
			if(#slot == -1);
				echo("/give @p minecraft:command_block");
				echo("/give @p minecraft:wooden_button");
			else;
				slot(%#slot%);
			endif;
		else;
			echo("/entitydata %&targetoutput% {%&string%}");
		endif;
	endif;
	log("&6&lBlock Data Changed, Macro Stopped");
else;
	log("&6&lPlease try again. (Happens if the chat is spamming)");
endif;
}$$